{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"ChatroomChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    var node = document.createElement(\"P\");\n    var n = JSON.stringify(data.content); // console.log(data);\n\n    var textnode = document.createTextNode(n);\n    node.id = data.content.id; // JSON.stringify(textnode)\n\n    console.log(textnode);\n    node.appendChild(textnode);\n    document.getElementById(\"message-container\").appendChild(node);\n    document.getElementById('message_body').value = ''; // Called when there's incoming data on the websocket for this channel\n  }\n}); // consumer.subscriptions.create({ channel: \"ChatroomChannel\", room: \"Best Room\" }, {\n//   received(data) {\n//     this.appendLine(data)\n//   },\n//   appendLine(data) {\n//     const html = this.createLine(data)\n//     const element = document.querySelector(\"[data-chat-room='Best Room']\")\n//     element.insertAdjacentHTML(\"beforeend\", html)\n//   },\n//   createLine(data) {\n//     return `\n//       <article class=\"chat-line\">\n//         <span class=\"speaker\">${data[\"sent_by\"]}</span>\n//         <span class=\"body\">${data[\"body\"]}</span>\n//       </article>\n//     `\n//   }\n// })","map":{"version":3,"sources":["/Users/flobiz/projects/ruby/message_me/app/javascript/channels/chatroom_channel.js"],"names":["consumer","subscriptions","create","connected","disconnected","received","data","node","document","createElement","n","JSON","stringify","content","textnode","createTextNode","id","console","log","appendChild","getElementById","value"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,iBAA9B,EAAiD;AAC/CC,EAAAA,SAD+C,uBACnC,CACV;AACD,GAH8C;AAK/CC,EAAAA,YAL+C,0BAKhC,CACb;AACD,GAP8C;AAS/CC,EAAAA,QAT+C,oBAStCC,IATsC,EAShC;AACb,QAAIC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;AACA,QAAIC,CAAC,GAAGC,IAAI,CAACC,SAAL,CAAeN,IAAI,CAACO,OAApB,CAAR,CAFa,CAGb;;AACA,QAAIC,QAAQ,GAAGN,QAAQ,CAACO,cAAT,CAAwBL,CAAxB,CAAf;AACAH,IAAAA,IAAI,CAACS,EAAL,GAAUV,IAAI,CAACO,OAAL,CAAaG,EAAvB,CALa,CAMb;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAP,IAAAA,IAAI,CAACY,WAAL,CAAiBL,QAAjB;AACAN,IAAAA,QAAQ,CAACY,cAAT,CAAwB,mBAAxB,EAA6CD,WAA7C,CAAyDZ,IAAzD;AACAC,IAAAA,QAAQ,CAACY,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,GAA+C,EAA/C,CAVa,CAYb;AACD;AAtB8C,CAAjD,E,CAwBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"ChatroomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    var node = document.createElement(\"P\");\n    var n = JSON.stringify(data.content);\n    // console.log(data);\n    var textnode = document.createTextNode(n);\n    node.id = data.content.id;\n    // JSON.stringify(textnode)\n    console.log(textnode)\n    node.appendChild(textnode);\n    document.getElementById(\"message-container\").appendChild(node);\n    document.getElementById('message_body').value= ''\n\n    // Called when there's incoming data on the websocket for this channel\n  }\n});\n// consumer.subscriptions.create({ channel: \"ChatroomChannel\", room: \"Best Room\" }, {\n//   received(data) {\n//     this.appendLine(data)\n//   },\n\n//   appendLine(data) {\n//     const html = this.createLine(data)\n//     const element = document.querySelector(\"[data-chat-room='Best Room']\")\n//     element.insertAdjacentHTML(\"beforeend\", html)\n//   },\n\n//   createLine(data) {\n//     return `\n//       <article class=\"chat-line\">\n//         <span class=\"speaker\">${data[\"sent_by\"]}</span>\n//         <span class=\"body\">${data[\"body\"]}</span>\n//       </article>\n//     `\n//   }\n// })"]},"metadata":{},"sourceType":"module"}