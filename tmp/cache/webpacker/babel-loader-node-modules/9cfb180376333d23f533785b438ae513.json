{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"ChatroomChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    console.log(\"received\");\n    $('#message-container').append(data.mod_message);\n    scroll_bottom();\n  }\n}); // consumer.subscriptions.create({ channel: \"ChatroomChannel\", room: \"Best Room\" }, {\n//   received(data) {\n//     this.appendLine(data)\n//   },\n//   appendLine(data) {\n//     const html = this.createLine(data)\n//     const element = document.querySelector(\"[data-chat-room='Best Room']\")\n//     element.insertAdjacentHTML(\"beforeend\", html)\n//   },\n//   createLine(data) {\n//     return `\n//       <article class=\"chat-line\">\n//         <span class=\"speaker\">${data[\"sent_by\"]}</span>\n//         <span class=\"body\">${data[\"body\"]}</span>\n//       </article>\n//     `\n//   }\n// })","map":{"version":3,"sources":["/Users/flobiz/projects/ruby/message_me/app/javascript/channels/chatroom_channel.js"],"names":["consumer","subscriptions","create","connected","disconnected","received","data","console","log","$","append","mod_message","scroll_bottom"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,iBAA9B,EAAiD;AAC/CC,EAAAA,SAD+C,uBACnC,CACV;AACD,GAH8C;AAK/CC,EAAAA,YAL+C,0BAKhC,CACb;AACD,GAP8C;AAS/CC,EAAAA,QAT+C,oBAStCC,IATsC,EAShC;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBC,MAAxB,CAA+BJ,IAAI,CAACK,WAApC;AACAC,IAAAA,aAAa;AACd;AAb8C,CAAjD,E,CAeA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"ChatroomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    console.log(\"received\");\n    $('#message-container').append(data.mod_message)\n    scroll_bottom()\n  }\n});\n// consumer.subscriptions.create({ channel: \"ChatroomChannel\", room: \"Best Room\" }, {\n//   received(data) {\n//     this.appendLine(data)\n//   },\n\n//   appendLine(data) {\n//     const html = this.createLine(data)\n//     const element = document.querySelector(\"[data-chat-room='Best Room']\")\n//     element.insertAdjacentHTML(\"beforeend\", html)\n//   },\n\n//   createLine(data) {\n//     return `\n//       <article class=\"chat-line\">\n//         <span class=\"speaker\">${data[\"sent_by\"]}</span>\n//         <span class=\"body\">${data[\"body\"]}</span>\n//       </article>\n//     `\n//   }\n// })"]},"metadata":{},"sourceType":"module"}